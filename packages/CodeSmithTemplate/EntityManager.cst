
<%@ CodeTemplate Language="C#" ResponseEncoding="UTF-8" TargetLanguage="Text" Src="Helper.cs" Inherits="Helper" Debug="False" Description="Template description here." %>
<%@ Property Name="NameSpace" Type="System.String" Default="" Optional="false" Category="1.命名空间" Description="当前生成命名空间" %>
<%@ Property Name="DataBase" Type="SchemaExplorer.DatabaseSchema" Category="2.数据库对象" Description="数据库对象" %>

<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
//------------------------------------------------------------------------------
// <auto-generated> EntityManager.cst
//     此代码由工具生成。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using <%= NameSpace %>.DataModel;

namespace <%= NameSpace %>.BusinessRule
{
    /// <summary>
    /// 实体管理类。
    /// </summary>
    public static partial class EntityManager
    {
	   <%foreach(TableSchema tv in DataBase.Tables)
		{
		if (IsExceptName(tv.Name)) continue;
		%>
		#region <%= GetTVRemark(tv) %>
		/// <summary>
        /// 指定<%= GetTVRemark(tv) %>是否存在。
        /// </summary>
        <% foreach(ColumnSchema column in tv.Columns){if (column.IsPrimaryKeyMember) {%>
		/// <param name="<%= ConvertFirstLowerStr(column.Name) %>">主键。</param>
		<% }} %>
		/// <return>返回验证的<%= GetTVRemark(tv) %>。</return>
		/// <exception cref="System.ArgumentNullException">传入的参数为空时，或不存在抛出此异常。</exception>
        public static <%= GetClassName(tv) %> Validate<%= GetClassName(tv) %>(<%= GetPKString3(tv) %>)
        {
			<%= GetClassName(tv) %> ret = DataProvider.Instance.Get<%= GetClassName(tv) %>(<% =GetPKString(tv) %>);
            if (ret == null)
	            throw new ArgumentNullException("", String.Format("未找到该<%= GetClassName(tv) %>。<% =GetPKString2(tv) %>", <% =GetPKString(tv) %>));
			return ret;
        }
		
		/// <summary>
        /// 指定<%= GetTVRemark(tv) %>是否存在。
        /// </summary>
        /// <param name="<%= GetClassNameLow(tv) %>">指定的<%= GetTVRemark(tv) %>。</param>
		/// <exception cref="System.ArgumentNullException">传入的参数为空时，或不存在抛出此异常。</exception>
        public static void Validate<%= GetClassName(tv) %>(<%= GetClassName(tv) %> <%= GetClassNameLow(tv) %>)
        {
		    if (<%= GetClassNameLow(tv) %> == null)
                throw new ArgumentNullException("<%= GetClassNameLow(tv) %>", "参数不能为空。");
				
			Validate<%= GetClassName(tv) %>(<%= GetPKString5(tv) %>);
        }
		
		/// <summary>
        /// 指定<%= GetTVRemark(tv) %>集合是否存在。
        /// </summary>
        /// <param name="<%= GetClassNameLow(tv) %>s">指定的<%= GetTVRemark(tv) %>集合。</param>
		/// <exception cref="System.ArgumentNullException">传入的参数为空，或不存在时抛出此异常。</exception>
        public static void Validate<%= GetClassName(tv) %>(List<<%= GetClassName(tv) %>> <%= GetClassNameLow(tv) %>s)
        {
            if (<%= GetClassNameLow(tv) %>s == null)
                throw new ArgumentNullException("<%= GetClassNameLow(tv) %>s", "参数不能为空。");

            foreach (<%= GetClassName(tv) %> i in <%= GetClassNameLow(tv) %>s)
                Validate<%= GetClassName(tv) %>(i);
        }		
		<% if (HasIdColumn(tv)) {%>
		
		/// <summary>
        /// 指定<%= GetTVRemark(tv) %>是否存在。
        /// </summary>
		/// <param name="<%= GetClassNameLow(tv) %>">指定的<%= GetTVRemark(tv) %>。</param>
		/// <exception cref="System.ArgumentNullException">传入的参数为空时，或不存在抛出此异常。</exception>
        public static void Validate<%= GetClassName(tv) %>(<%= GetViewObjStr(tv) %> <%= GetClassNameLow(tv) %>)
        {
    		if (<%= GetClassNameLow(tv) %> == null)
                throw new ArgumentNullException("<%= GetClassNameLow(tv) %>", "参数不能为空。");
				
			Validate<%= GetClassName(tv) %>(<%= GetClassNameLow(tv) %>.Id);      
		}
		
		/// <summary>
        /// 指定<%= GetTVRemark(tv) %>集合是否存在。
        /// </summary>
        /// <param name="<%= GetClassNameLow(tv) %>s">指定的<%= GetTVRemark(tv) %>集合。</param>
		/// <exception cref="System.ArgumentNullException">传入的参数为空，或不存在时抛出此异常。</exception>
        public static void Validate<%= GetClassName(tv) %>(List<<%= GetViewObjStr(tv) %>> <%= GetClassNameLow(tv) %>s)
        {
            if (<%= GetClassNameLow(tv) %>s == null)
                throw new ArgumentNullException("<%= GetClassNameLow(tv) %>s", "参数不能为空。");

            foreach (<%= GetViewObjStr(tv) %> i in <%= GetClassNameLow(tv) %>s)
                Validate<%= GetClassName(tv) %>(i);
        }		
		<% } %>
		#endregion
		
		<% } %>
    }
}

<script runat="template">
public bool IsIdNull(ViewSchema view)
{
	foreach(ViewColumnSchema column in view.Columns)
	{
		if (column.Name == "Id")
		{
			if (column.AllowDBNull)
				return true;
			else
				return false;
		}
	}
	throw new ArgumentNullException();
}

public string GetIdStr(ViewSchema view)
{
	if (IsIdNull(view))
		return "item.Id.Value";
	else
	    return "item.Id";
}
</script>