
<%@ CodeTemplate Language="C#" ResponseEncoding="UTF-8" TargetLanguage="Text" Src="Helper.cs" Inherits="Helper" Debug="False" Description="Template description here." %>
<%-- 程序集--%>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%--导入命名空间 --%>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="SchemaExplorer" %>
<%--定义属性 --%>
<%@ Property Name="NameSpace" Type="System.String" Default="" Optional="False" Category="命名空间" Description="当前生成实体类的命名空间"  %>
<%@ Property Name="DataBase" Type="SchemaExplorer.DatabaseSchema" Category="2.数据库对象" Description="数据库对象" %>
//------------------------------------------------------------------------------
// <auto-generated> enityBuilder.cst
//     此代码由工具生成.
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将丢失.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace <%=NameSpace%>.Entities
{
    <%foreach(TableSchema tv in DataBase.Tables)
	{
		if (IsExceptName(tv.Name)) continue;
	%>
	#region <%= GetTVRemark(tv) %>

	public class <%= GetClassName(tv) %>FilterBuilder : SqlFilterBuilder<<%= GetClassName(tv) %>Columns>
	{
		public <%= GetClassName(tv) %>FilterBuilder() { }

		public <%= GetClassName(tv) %>FilterBuilder(bool ignoreCase) : base(ignoreCase) { }

		public <%= GetClassName(tv) %>FilterBuilder(bool ignoreCase, bool useAnd) : base(ignoreCase, useAnd) { }
	}
    
	#endregion
	
	<%}%>	
}